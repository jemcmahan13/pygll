%root Spec
%tokens
pound "#"
bar '\|'
epsilon "\$"
lrepeat '\[' rrepeat '\]'
lset '<' rset '>'
lopt '{' ropt '}'
string "(\\'|\\").*?[^\\\\]\\1"
name "\w+"
%grammar

Spec := RootDecl TokenDecl GrammarDecl
      ;
RootDecl := '%root' name
          ;
TokenDecl := '%tokens' TokenPairs
           ;
TokenPairs := name string TokenPairs
            | $
            ;
GrammarDecl := '%grammar' Decls
             ;
Decls := Decl Decls              # Declarations decl rest
       | $
       ;
Decl := name ':=' Alt Alts ';'  # Declaration dname _ alt alts _
      ;
Alt := Exp Exps Binding       # Alternative term terms bind
     | epsilon                  # _
     ;
Alts := bar Alt Alts             # Alternatives _ alt alts
      | $
      ;
Exp := lrepeat Exps rrepeat     # exprepeat _ exps _
     | lset Exps rset           # expset _ exps _
     | lopt Exps ropt           # eopt _ exps _
     | Term
     ;
Exps := Exp Exps                # Expr exp rest
      | $
      ;

Term := name                     # Name val
      | string                  # String val
      ;
Terms := Term Terms              # Terms term terms
       | $
       ;
Binding := pound name Names        # Binding _ bname names
         | $
         ;
Names := name Names              # Names termname names
       | $
       ;
